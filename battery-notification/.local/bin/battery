#!/bin/bash

# Redirect all output to custom log file to avoid journalctl pollution
LOG_FILE="/tmp/battery-notification.log"
exec >>"$LOG_FILE" 2>&1

# Set default values if not already set
: ${SAFE_BATTERY_LEVEL:=30}
: ${NOTIF_TIMEOUT:=3000}
: ${FULL_BATTERY_LEVEL:=80}
: ${LOW_BATTERY_SOUND:="$HOME/.local/share/battery/sounds/low_battery.mp3"}
: ${FULL_BATTERY_SOUND:="$HOME/.local/share/battery/sounds/battery_charged.mp3"}

# Ensure proper environment for Wayland notifications
export XDG_RUNTIME_DIR="${XDG_RUNTIME_DIR:-/run/user/$(id -u)}"
export WAYLAND_DISPLAY="${WAYLAND_DISPLAY:-wayland-0}"

# Log rotation - keep log file under 1MB
if [ -f "$LOG_FILE" ] && [ $(stat -f%z "$LOG_FILE" 2>/dev/null || stat -c%s "$LOG_FILE" 2>/dev/null || echo 0) -gt 1048576 ]; then
  tail -n 100 "$LOG_FILE" >"$LOG_FILE.tmp" && mv "$LOG_FILE.tmp" "$LOG_FILE"
fi

# Get battery information
battery_info=$(/usr/bin/acpi -b 2>/dev/null)
if [ -z "$battery_info" ]; then
  echo "$(date): Failed to get battery information"
  exit 0
fi

last_battery_line=$(echo "$battery_info" | grep -E 'Charging|Discharging' | tail -n 1)
state=$(echo "$last_battery_line" | grep -oE 'Charging|Discharging')
percentage=$(echo "$last_battery_line" | grep -oE '[0-9]+%' | tr -d '%')

# Function to send notifications
notify() {
  local urgency="$1"
  local title="$2"
  local message="$3"
  local sound_file="$4"

  # Send notification (suppress output)
  notify-send -t "$NOTIF_TIMEOUT" -u "$urgency" "$title" "$message" >/dev/null 2>&1

  # Play sound if file exists
  if [ -f "$sound_file" ]; then
    if command -v paplay &>/dev/null; then
      paplay "$sound_file" >/dev/null 2>&1
    elif command -v aplay &>/dev/null; then
      aplay "$sound_file" >/dev/null 2>&1
    elif command -v mpv &>/dev/null; then
      mpv --no-video --really-quiet "$sound_file" >/dev/null 2>&1
    else
      echo "$(date): No audio player found"
    fi
  else
    echo "$(date): Sound file not found: $sound_file"
  fi
}

# Check battery conditions and notify accordingly
if [[ $percentage -lt $SAFE_BATTERY_LEVEL && $state == "Discharging" ]]; then
  echo "$(date): Low battery notification sent - $percentage%"
  notify "critical" "Battery level critical!" "Connect Charger<br />Battery level is at $percentage%" "$LOW_BATTERY_SOUND"
elif [[ $percentage -ge $FULL_BATTERY_LEVEL && $state == "Charging" ]]; then
  echo "$(date): Full battery notification sent - $percentage%"
  notify "normal" "Battery Fully Charged" "You can unplug the charger<br />Battery level is at $percentage%" "$FULL_BATTERY_SOUND"
fi
